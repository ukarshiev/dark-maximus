---
alwaysApply: true
---
1. Всегда проверяй наличие файла changelog.md. Если файл отсутствует, создавай его. Если файл существует, проанализируй изменения в проекте и дописывай файл новыми изменениями.

2. Никогда не редактируй существующие записи в CHANGELOG.md — даты и версии прошлых записей сохраняются без изменений.
3. Дважды перепроверь, чтобы время было по UTC+3. Проверяй текущее время Get-Date -Format "dd.MM.yyyy HH:mm" по UTC+3

4. Источник даты для новой записи:
   - Используй текущее время сервера (UTC Moscow).
   - Формат даты: DD.MM.YYYY. Если в файле уже есть запись с такой же датой — добавь временную метку HH:MM 

5. Версионирование:
   - Найди последнюю строку версии в формате X.Y.Z – DD.MM.YYYY
   - Определи bump по приоритету изменений: Мажор (архитектура) > Минор (новый функционал) > Патч (фиксы/мелкие доработки).
     * Если есть хотя бы один «новый функционал» → bump Y (минор) и Z = 0.
     * Если есть «мажорное» изменение (архитектурное, несовместимое) → bump X, Y = 0, Z = 0.
     * Иначе → bump Z (патч).
   - Если версия не найдена — начинай с 0.1.0.

6. Вставка записи:
   - Новая запись **вставляется в начало** файла (самая свежая сверху).
   - Не меняй порядок/даты/версии предыдущих записей.

7. Формат записи:
   X.Y.Z – DD.MM.YYYY HH:mm
   - [Тип изменения] (Область) место — Краткое развернутое описание
   - ...

8. Логирование:
   - При автогенерации логируй источник даты (now UTC Moscow) в CI/логе.
   - Добавь проверку: новая дата либо позже последней, либо та же дата с временем (чтобы избежать коллизий).
После каждого изменения в CHANGELOG.md автоматически обновляй версию в pyproject.toml