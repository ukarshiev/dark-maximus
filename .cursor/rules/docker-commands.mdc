---
alwaysApply: false
---
## Docker команды
Формат раздела:
"Что сделать, чтобы применить изменения:"
1) <команда>
2) <команда>
Кратко указать "почему" после каждой команды.

Логика выбора команд (Docker Compose, сервис `bot`):
- Если менял только Python-код (`src/shop_bot/**`, включая `webhook_server/*.py`, но без зависимостей):
  - docker compose restart bot
  - Почему: перезапуск подтянет изменения кода из volume.

- Если менял шаблоны/статику (`src/shop_bot/webhook_server/templates/**`, `src/shop_bot/webhook_server/static/**`):
  - Обнови страницу в браузере (Ctrl+F5)
  - При необходимости: docker compose restart bot
  - Почему: шаблоны/стили подхватываются из volume; перезапуск нужен только если кэш.

- Если менял `Dockerfile`:
  - docker compose build bot && docker compose up -d bot
  - Почему: требуется пересборка образа.

- Если менял зависимости (`pyproject.toml`):
  - docker compose down -v && docker compose build bot && docker compose up -d bot
  - Почему: нужен чистый venv-том и переустановка зависимостей.

- Если менял `docker-compose.yml`:
  - docker compose up -d --build
  - Почему: применить изменения сервисов/окружения и при необходимости пересобрать.

- Если менял конфиги, читаемые на старте (например, `src/shop_bot/config.py`):
  - docker compose restart bot
  - Почему: конфиг перечитывается при старте процесса.

- Если не уверен, какой вариант:
  - docker compose up -d --build
  - Почему: безопасно пересоздаёт контейнер с учётом всех изменений.

- Для проверки результата/ошибок всегда добавлять:
  - docker compose logs -f bot

## Примеры команд

### Быстрые команды для разработки:
```bash
# Перезапуск только бота (изменения в Python коде)
docker compose restart bot

# Перезапуск с пересборкой (изменения в Dockerfile)
docker compose build bot && docker compose up -d bot

# Полная пересборка (изменения в зависимостях)
docker compose down -v && docker compose build bot && docker compose up -d bot

# Просмотр логов в реальном времени
docker compose logs -f bot

# Проверка статуса контейнеров
docker compose ps
```

### Команды для отладки:
```bash
# Вход в контейнер бота
docker compose exec bot bash

# Просмотр переменных окружения
docker compose exec bot env

# Проверка файлов в контейнере
docker compose exec bot ls -la /app
```