# Multi-stage Dockerfile для пользовательской документации
# Следует best practices из Docker документации

# =========================================
# Stage 1: Подготовка статичных файлов
# =========================================
FROM alpine:3.22 AS docs-builder

WORKDIR /build

# Копируем документацию
COPY docs/user-docs ./docs

# Создаем индекс если его нет
RUN if [ ! -f ./docs/index.html ]; then \
    echo '<!DOCTYPE html><html><head><title>Dark Maximus - Документация</title></head><body><h1>Документация</h1></body></html>' > ./docs/index.html; \
    fi

# =========================================
# Stage 2: Nginx для статичных файлов
# =========================================
FROM nginxinc/nginx-unprivileged:alpine3.22

# Переключаемся на root для установки пакетов
USER root

# Устанавливаем netcat и wget для healthcheck
RUN apk add --no-cache netcat-openbsd wget

# Переключаемся обратно на nginx пользователя для безопасности
USER nginx

# Копируем кастомную конфигурацию Nginx
COPY docs/nginx-docs.conf /etc/nginx/conf.d/default.conf

# Копируем статичные файлы из builder stage
COPY --chown=nginx:nginx --from=docs-builder /build/docs /usr/share/nginx/html/docs

# Expose порт 80 (стандарт для nginx-unprivileged)
EXPOSE 80

# Healthcheck
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --quiet --tries=1 --spider http://localhost:80/health || exit 1

# Запускаем Nginx
ENTRYPOINT ["nginx", "-g", "daemon off;"]

