#!/usr/bin/env bash
# SSL Setup Script for Dark Maximus
# Usage: curl -sSL https://raw.githubusercontent.com/ukarshiev/dark-maximus/main/ssl-install.sh | sudo bash -s -- domain.com

set -o errexit
set -o pipefail
set -o nounset

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
handle_error() {
    echo -e "\n${RED}–û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–µ $1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL –ø—Ä–µ—Ä–≤–∞–Ω–∞.${NC}"
    exit 1
}
trap 'handle_error $LINENO' ERR

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–≤–æ–¥–∞
read_input() {
    if [ -t 0 ]; then
        read -p "$1" "$2" < /dev/tty
    else
        read -p "$1" "$2" || true
    fi
}

# –í—ã–±–∏—Ä–∞–µ–º docker compose v1/v2
if docker compose version >/dev/null 2>&1; then
    DC=("docker" "compose")
else
    DC=("docker-compose")
fi

echo -e "${GREEN}===============================================${NC}"
echo -e "${GREEN}      üîí Dark Maximus - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL        ${NC}"
echo -e "${GREEN}===============================================${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ root
if [ "$EUID" -ne 0 ]; then
    echo -e "${RED}‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root: sudo bash <(curl -sSL https://raw.githubusercontent.com/ukarshiev/dark-maximus/main/ssl-install.sh) domain.com${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞, –µ—Å–ª–∏ –Ω–µ—Ç - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ /opt/dark-maximus
if [ ! -f "docker-compose.yml" ]; then
    if [ -f "/opt/dark-maximus/docker-compose.yml" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ /opt/dark-maximus${NC}"
        cd /opt/dark-maximus
        PROJECT_DIR="/opt/dark-maximus"
    else
        echo -e "${RED}‚ùå –§–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        echo -e "${YELLOW}–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞ Dark Maximus.${NC}"
        echo -e "${YELLOW}–ï—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Å–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:${NC}"
        echo -e "${CYAN}curl -sSL https://raw.githubusercontent.com/ukarshiev/dark-maximus/main/install.sh | sudo bash -s -- domain.com${NC}"
        exit 1
    fi
else
    PROJECT_DIR="$(pwd)"
fi

echo -e "${GREEN}‚úî –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${PROJECT_DIR}${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ nginx —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v nginx >/dev/null 2>&1; then
    echo -e "${RED}‚ùå Nginx –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
    echo -e "${YELLOW}–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±—ã–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ.${NC}"
    echo -e "${YELLOW}–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞:${NC}"
    echo -e "${CYAN}curl -sSL https://raw.githubusercontent.com/ukarshiev/dark-maximus/main/install.sh | sudo bash -s -- domain.com${NC}"
    exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º –¥–æ–º–µ–Ω –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ –∏–∑–≤–ª–µ–∫–∞–µ–º –∏–∑ nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if [ -n "$1" ]; then
    MAIN_DOMAIN="$1"
    echo -e "${GREEN}‚úî –î–æ–º–µ–Ω –ø–æ–ª—É—á–µ–Ω –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤: ${MAIN_DOMAIN}${NC}"
else
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω—ã –∏–∑ nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    if [ -f "/etc/nginx/sites-available/dark-maximus" ]; then
        MAIN_DOMAIN=$(grep -o 'server_name [^;]*' "/etc/nginx/sites-available/dark-maximus" | grep -v "default_server" | head -1 | awk '{print $2}')
    fi
    
    if [ -z "$MAIN_DOMAIN" ]; then
        echo -e "${RED}‚ùå –î–æ–º–µ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω!${NC}"
        echo -e "${YELLOW}–ü–µ—Ä–µ–¥–∞–π—Ç–µ –¥–æ–º–µ–Ω –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç:${NC}"
        echo -e "${CYAN}curl -sSL https://raw.githubusercontent.com/ukarshiev/dark-maximus/main/ssl-install.sh | sudo bash -s -- example.com${NC}"
        exit 1
    fi
fi

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–¥–¥–æ–º–µ–Ω—ã
PANEL_DOMAIN="panel.${MAIN_DOMAIN}"
DOCS_DOMAIN="docs.${MAIN_DOMAIN}"
HELP_DOMAIN="help.${MAIN_DOMAIN}"

echo -e "${GREEN}‚úî –î–æ–º–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã:${NC}"
echo -e "   - –ü–∞–Ω–µ–ª—å: ${MAIN_DOMAIN}"
echo -e "   - –ü–∞–Ω–µ–ª—å (–ø–æ–¥–¥–æ–º–µ–Ω): ${PANEL_DOMAIN}"
echo -e "   - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: ${DOCS_DOMAIN}"
echo -e "   - –ê–¥–º–∏–Ω-–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: ${HELP_DOMAIN}"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º email –¥–ª—è Let's Encrypt
EMAIL="admin@${MAIN_DOMAIN}"
echo -e "${YELLOW}–ò—Å–ø–æ–ª—å–∑—É–µ–º email –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: ${EMAIL}${NC}"

echo -e "\n${CYAN}–®–∞–≥ 0: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ HTTP nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ HTTP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å upstream —Å–µ—Ä–≤–µ—Ä–∞–º–∏
if ! grep -q "upstream bot_backend" /etc/nginx/sites-available/dark-maximus 2>/dev/null; then
    echo -e "${YELLOW}–°–æ–∑–¥–∞–Ω–∏–µ HTTP nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å upstream —Å–µ—Ä–≤–µ—Ä–∞–º–∏...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º HTTP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx —Å upstream —Å–µ—Ä–≤–µ—Ä–∞–º–∏
    cat > /etc/nginx/sites-available/dark-maximus << 'EOF'
# Upstream —Å–µ—Ä–≤–µ—Ä—ã –¥–ª—è Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (localhost)
upstream bot_backend {
    server 127.0.0.1:1488;
    keepalive 32;
}

upstream docs_backend {
    server 127.0.0.1:3001;
    keepalive 32;
}

upstream codex_docs_backend {
    server 127.0.0.1:3002;
    keepalive 32;
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä (–ø–∞–Ω–µ–ª—å)
server {
    listen 80;
    server_name ${MAIN_DOMAIN};
    
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    client_max_body_size 20m;
    
    # –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ bot —Å–µ—Ä–≤–∏—Å
    location / {
        proxy_pass http://bot_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # –¢–∞–π–º–∞—É—Ç—ã
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # –ë—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—è
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # Health check
    location /health {
        proxy_pass http://bot_backend/health;
        access_log off;
    }
}

# –°–µ—Ä–≤–µ—Ä panel –ø–æ–¥–¥–æ–º–µ–Ω–∞
server {
    listen 80;
    server_name ${PANEL_DOMAIN};
    
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    client_max_body_size 20m;
    
    # –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ bot —Å–µ—Ä–≤–∏—Å
    location / {
        proxy_pass http://bot_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # –¢–∞–π–º–∞—É—Ç—ã
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # –ë—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—è
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # Health check
    location /health {
        proxy_pass http://bot_backend/health;
        access_log off;
    }
}

# –°–µ—Ä–≤–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
server {
    listen 80;
    server_name ${DOCS_DOMAIN};
    
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    client_max_body_size 20m;
    
    # –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ docs —Å–µ—Ä–≤–∏—Å
    location / {
        proxy_pass http://docs_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # –¢–∞–π–º–∞—É—Ç—ã
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Health check
    location /health {
        proxy_pass http://docs_backend/health;
        access_log off;
    }
}

# –°–µ—Ä–≤–µ—Ä –∞–¥–º–∏–Ω—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
server {
    listen 80;
    server_name ${HELP_DOMAIN};
    
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    client_max_body_size 20m;
    
    # –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ codex-docs —Å–µ—Ä–≤–∏—Å
    location / {
        proxy_pass http://codex_docs_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 60m;
        proxy_buffering off;
        
        # –¢–∞–π–º–∞—É—Ç—ã
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
    }
    
    # Health check
    location /health {
        proxy_pass http://codex_docs_backend/;
        access_log off;
    }
}

# –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤
server {
    listen 80 default_server;
    server_name _;
    return 444;
}
EOF
    
    echo -e "${GREEN}‚úî HTTP nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞${NC}"
else
    echo -e "${GREEN}‚úî HTTP nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
if ! nc -z 127.0.0.1 1488 2>/dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã. –ó–∞–ø—É—Å–∫–∞–µ–º...${NC}"
    cd "$PROJECT_DIR"
    ${DC[@]} up -d
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    echo -e "${YELLOW}–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
    timeout 120 bash -c 'until nc -z 127.0.0.1 1488; do sleep 2; done' || {
        echo -e "${RED}‚ùå Bot —Å–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –º–∏–Ω—É—Ç${NC}"
        ${DC[@]} logs bot
        exit 1
    }
    
    timeout 60 bash -c 'until nc -z 127.0.0.1 3001; do sleep 2; done' || {
        echo -e "${RED}‚ùå Docs —Å–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã${NC}"
        ${DC[@]} logs docs
        exit 1
    }
    
    timeout 60 bash -c 'until nc -z 127.0.0.1 3002; do sleep 2; done' || {
        echo -e "${RED}‚ùå Codex-docs —Å–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã${NC}"
        ${DC[@]} logs codex-docs
        exit 1
    }
    
    echo -e "${GREEN}‚úî –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã${NC}"
else
    echo -e "${GREEN}‚úî –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É–∂–µ –∑–∞–ø—É—â–µ–Ω—ã${NC}"
fi

echo -e "\n${CYAN}–®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS –∑–∞–ø–∏—Å–µ–π...${NC}"

# –ü–æ–ª—É—á–∞–µ–º IP —Å–µ—Ä–≤–µ—Ä–∞
SERVER_IP="$(curl -s4 https://api.ipify.org || hostname -I | awk '{print $1}')"
echo -e "${YELLOW}IP –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ (IPv4): $SERVER_IP${NC}"

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ DNS
check_dns() {
    local domain="$1"
    local ips
    ips=$(dig +short A "$domain" @8.8.8.8 | sort -u)
    echo -e "  - ${domain} ‚Üí ${ips:-<–Ω–µ—Ç A>}"
    [ -n "$ips" ] && grep -Fxq "$SERVER_IP" <<<"$ips"
}

DNS_OK=true
for check_domain in "$MAIN_DOMAIN" "$PANEL_DOMAIN" "$DOCS_DOMAIN" "$HELP_DOMAIN"; do
    if ! check_dns "$check_domain"; then
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê: DNS –¥–ª—è ${check_domain} –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ IP —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞!${NC}"
        DNS_OK=false
    fi
done

if [ "$DNS_OK" = false ]; then
    echo -e "${RED}‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: DNS –∑–∞–ø–∏—Å–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!${NC}"
    echo -e "${YELLOW}–ù–∞—Å—Ç—Ä–æ–π—Ç–µ A-–∑–∞–ø–∏—Å–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–¥–¥–æ–º–µ–Ω–æ–≤ –Ω–∞ IP: ${SERVER_IP}${NC}"
    echo -e "${YELLOW}–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ DNS –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞.${NC}"
    exit 1
fi

echo -e "${GREEN}‚úî –í—Å–µ DNS –∑–∞–ø–∏—Å–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã.${NC}"

echo -e "\n${CYAN}–®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Certbot...${NC}"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –¥–ª—è APT
export DEBIAN_FRONTEND=noninteractive

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Certbot
apt -yq update
apt -yq install certbot python3-certbot-nginx

echo -e "${GREEN}‚úî Certbot —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"

echo -e "\n${CYAN}–®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ SSL-–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${NC}"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è SSL
mkdir -p /etc/letsencrypt/live
mkdir -p /etc/letsencrypt/archive

# –°–æ–∑–¥–∞–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é SSL –¥–ª—è nginx
cat > /etc/nginx/snippets/ssl-params.conf << 'EOF'
# –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è SSL —Å –ª—É—á—à–∏–º–∏ –ø—Ä–∞–∫—Ç–∏–∫–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
ssl_prefer_server_ciphers off;

# SSL —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 10m;
ssl_session_tickets off;

# OCSP stapling –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
ssl_stapling on;
ssl_stapling_verify on;
resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 5s;

# –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
add_header X-Frame-Options DENY always;
add_header X-Content-Type-Options nosniff always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Referrer-Policy "strict-origin-when-cross-origin" always;
add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:; frame-ancestors 'none';" always;

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), interest-cohort=()" always;
add_header X-Permitted-Cross-Domain-Policies "none" always;
add_header X-Download-Options "noopen" always;
add_header X-DNS-Prefetch-Control "off" always;
EOF

echo -e "${GREEN}‚úî SSL-–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞${NC}"

echo -e "\n${CYAN}–®–∞–≥ 4: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ nginx –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤...${NC}"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx
systemctl stop nginx

echo -e "\n${CYAN}–®–∞–≥ 5: –ü–æ–ª—É—á–µ–Ω–∏–µ SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤...${NC}"

# –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤
echo -e "${YELLOW}–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è ${MAIN_DOMAIN}...${NC}"
certbot certonly --standalone \
    --email "$EMAIL" \
    --agree-tos \
    --no-eff-email \
    --non-interactive \
    -d "$MAIN_DOMAIN"

echo -e "${YELLOW}–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è ${PANEL_DOMAIN}...${NC}"
certbot certonly --standalone \
    --email "$EMAIL" \
    --agree-tos \
    --no-eff-email \
    --non-interactive \
    -d "$PANEL_DOMAIN"

echo -e "${YELLOW}–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è ${DOCS_DOMAIN}...${NC}"
certbot certonly --standalone \
    --email "$EMAIL" \
    --agree-tos \
    --no-eff-email \
    --non-interactive \
    -d "$DOCS_DOMAIN"

echo -e "${YELLOW}–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è ${HELP_DOMAIN}...${NC}"
certbot certonly --standalone \
    --email "$EMAIL" \
    --agree-tos \
    --no-eff-email \
    --non-interactive \
    -d "$HELP_DOMAIN"

echo -e "${GREEN}‚úî –í—Å–µ SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã${NC}"

echo -e "\n${CYAN}–®–∞–≥ 6: –°–æ–∑–¥–∞–Ω–∏–µ HTTPS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx...${NC}"

# –°–æ–∑–¥–∞–µ–º HTTPS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
cat > /etc/nginx/sites-available/dark-maximus-ssl << 'EOF'
# Upstream —Å–µ—Ä–≤–µ—Ä—ã –¥–ª—è Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (localhost)
upstream bot_backend {
    server 127.0.0.1:1488;
    keepalive 32;
}

upstream docs_backend {
    server 127.0.0.1:3001;
    keepalive 32;
}

upstream codex_docs_backend {
    server 127.0.0.1:3002;
    keepalive 32;
}

# HTTP —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ HTTPS –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞
server {
    listen 80;
    server_name ${MAIN_DOMAIN};
    return 301 https://$server_name$request_uri;
}

# HTTPS —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞ (–ø–∞–Ω–µ–ª—å)
server {
    listen 443 ssl http2;
    server_name ${MAIN_DOMAIN};
    
    # SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
    ssl_certificate /etc/letsencrypt/live/${MAIN_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${MAIN_DOMAIN}/privkey.pem;
    include /etc/nginx/snippets/ssl-params.conf;
    
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    client_max_body_size 20m;
    
    # –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ bot —Å–µ—Ä–≤–∏—Å
    location / {
        proxy_pass http://bot_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # –¢–∞–π–º–∞—É—Ç—ã
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # –ë—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—è
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # Health check
    location /health {
        proxy_pass http://bot_backend/health;
        access_log off;
    }
}

# HTTP —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ HTTPS –¥–ª—è panel –ø–æ–¥–¥–æ–º–µ–Ω–∞
server {
    listen 80;
    server_name ${PANEL_DOMAIN};
    return 301 https://$server_name$request_uri;
}

# HTTPS —Å–µ—Ä–≤–µ—Ä –¥–ª—è panel –ø–æ–¥–¥–æ–º–µ–Ω–∞
server {
    listen 443 ssl http2;
    server_name ${PANEL_DOMAIN};
    
    # SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
    ssl_certificate /etc/letsencrypt/live/${PANEL_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${PANEL_DOMAIN}/privkey.pem;
    include /etc/nginx/snippets/ssl-params.conf;
    
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    client_max_body_size 20m;
    
    # –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ bot —Å–µ—Ä–≤–∏—Å
    location / {
        proxy_pass http://bot_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # –¢–∞–π–º–∞—É—Ç—ã
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # –ë—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—è
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # Health check
    location /health {
        proxy_pass http://bot_backend/health;
        access_log off;
    }
}

# HTTP —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ HTTPS –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
server {
    listen 80;
    server_name ${DOCS_DOMAIN};
    return 301 https://$server_name$request_uri;
}

# HTTPS —Å–µ—Ä–≤–µ—Ä –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
server {
    listen 443 ssl http2;
    server_name ${DOCS_DOMAIN};
    
    # SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
    ssl_certificate /etc/letsencrypt/live/${DOCS_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOCS_DOMAIN}/privkey.pem;
    include /etc/nginx/snippets/ssl-params.conf;
    
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    client_max_body_size 20m;
    
    # –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ docs —Å–µ—Ä–≤–∏—Å
    location / {
        proxy_pass http://docs_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # –¢–∞–π–º–∞—É—Ç—ã
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Health check
    location /health {
        proxy_pass http://docs_backend/health;
        access_log off;
    }
}

# HTTP —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ HTTPS –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
server {
    listen 80;
    server_name ${HELP_DOMAIN};
    return 301 https://$server_name$request_uri;
}

# HTTPS —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
server {
    listen 443 ssl http2;
    server_name ${HELP_DOMAIN};
    
    # SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
    ssl_certificate /etc/letsencrypt/live/${HELP_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${HELP_DOMAIN}/privkey.pem;
    include /etc/nginx/snippets/ssl-params.conf;
    
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    client_max_body_size 20m;
    
    # –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ codex-docs —Å–µ—Ä–≤–∏—Å
    location / {
        proxy_pass http://codex_docs_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 60m;
        proxy_buffering off;
        
        # –¢–∞–π–º–∞—É—Ç—ã
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
    }
    
    # Health check
    location /health {
        proxy_pass http://codex_docs_backend/;
        access_log off;
    }
}

# –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤
server {
    listen 80 default_server;
    server_name _;
    return 444;
}

server {
    listen 443 ssl default_server;
    server_name _;
    
    # –ó–∞–≥–ª—É—à–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    ssl_certificate /etc/letsencrypt/live/${MAIN_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${MAIN_DOMAIN}/privkey.pem;
    include /etc/nginx/snippets/ssl-params.conf;
    
    return 444;
}
EOF

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º HTTPS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
ln -sf /etc/nginx/sites-available/dark-maximus-ssl /etc/nginx/sites-enabled/dark-maximus

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx
nginx -t

echo -e "${GREEN}‚úî HTTPS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è nginx —Å–æ–∑–¥–∞–Ω–∞ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞${NC}"

echo -e "\n${CYAN}–®–∞–≥ 7: –ó–∞–ø—É—Å–∫ nginx —Å SSL...${NC}"

# –ó–∞–ø—É—Å–∫–∞–µ–º nginx
systemctl start nginx
systemctl enable nginx

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å nginx
systemctl status nginx --no-pager -l

echo -e "\n${CYAN}–®–∞–≥ 8: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤...${NC}"

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
cat > /usr/local/bin/renew-ssl.sh << 'EOF'
#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤

echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
certbot renew --quiet --post-hook "systemctl reload nginx"

if [ $? -eq 0 ]; then
    echo "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
else
    echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤"
    exit 1
fi
EOF

chmod +x /usr/local/bin/renew-ssl.sh

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º cron –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 2 –º–µ—Å—è—Ü–∞
TEMP_CRON=$(mktemp)
# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π crontab –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É
(crontab -l 2>/dev/null || echo "") > "$TEMP_CRON"
echo "0 3 1 */2 * /usr/local/bin/renew-ssl.sh >> /var/log/ssl-renewal.log 2>&1" >> "$TEMP_CRON"
crontab "$TEMP_CRON" 2>/dev/null || {
    echo "0 3 1 */2 * /usr/local/bin/renew-ssl.sh >> /var/log/ssl-renewal.log 2>&1" | crontab -
}
rm "$TEMP_CRON"

echo -e "${GREEN}‚úî –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ (–∫–∞–∂–¥—ã–µ 2 –º–µ—Å—è—Ü–∞)${NC}"

echo -e "\n${CYAN}–®–∞–≥ 9: –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤...${NC}"
certbot certificates

echo -e "\n${CYAN}–®–∞–≥ 10: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏...${NC}"

# –ñ–¥–µ–º –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
sleep 5

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å HTTPS —Å–µ—Ä–≤–∏—Å–æ–≤
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ HTTPS –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω
if curl -f -s -k https://${MAIN_DOMAIN}/health >/dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ HTTPS –ø–∞–Ω–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞: https://${MAIN_DOMAIN}${NC}"
else
    echo -e "${RED}‚ùå HTTPS –ø–∞–Ω–µ–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º panel –ø–æ–¥–¥–æ–º–µ–Ω
if curl -f -s -k https://${PANEL_DOMAIN}/health >/dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ HTTPS –ø–∞–Ω–µ–ª—å (–ø–æ–¥–¥–æ–º–µ–Ω) –¥–æ—Å—Ç—É–ø–Ω–∞: https://${PANEL_DOMAIN}${NC}"
else
    echo -e "${RED}‚ùå HTTPS –ø–∞–Ω–µ–ª—å (–ø–æ–¥–¥–æ–º–µ–Ω) –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
if curl -f -s -k https://${DOCS_DOMAIN}/health >/dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ HTTPS –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞: https://${DOCS_DOMAIN}${NC}"
else
    echo -e "${RED}‚ùå HTTPS –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω—Å–∫—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
if curl -f -s -k https://${HELP_DOMAIN}/ >/dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ HTTPS –∞–¥–º–∏–Ω-–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞: https://${HELP_DOMAIN}${NC}"
else
    echo -e "${RED}‚ùå HTTPS –∞–¥–º–∏–Ω-–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞${NC}"
fi

echo -e "\n${GREEN}===============================================${NC}"
echo -e "${GREEN}      üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! üéâ  ${NC}"
echo -e "${GREEN}===============================================${NC}"

echo -e "\n${BLUE}üì± –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã (HTTPS):${NC}"
echo -e "1. –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç –∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:"
echo -e "   - ${GREEN}https://${MAIN_DOMAIN}/login${NC}"

# –ß–∏—Ç–∞–µ–º –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞ –∏–∑ —Ñ–∞–π–ª–∞
if [ -f ".admin_pass" ]; then
    ADMIN_PASSWORD=$(cat .admin_pass)
    echo -e "   - –õ–æ–≥–∏–Ω: ${YELLOW}admin${NC}"
    echo -e "   - –ü–∞—Ä–æ–ª—å: ${YELLOW}${ADMIN_PASSWORD}${NC}"
else
    echo -e "   - –õ–æ–≥–∏–Ω: ${YELLOW}admin${NC}"
    echo -e "   - –ü–∞—Ä–æ–ª—å: ${YELLOW}admin${NC} (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
fi

echo -e "\n2. –ü–∞–Ω–µ–ª—å (–ø–æ–¥–¥–æ–º–µ–Ω):"
echo -e "   - ${GREEN}https://${PANEL_DOMAIN}/login${NC}"

echo -e "\n3. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
echo -e "   - ${GREEN}https://${DOCS_DOMAIN}${NC}"

echo -e "\n4. –ê–¥–º–∏–Ω—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è (Codex.docs):"
echo -e "   - ${GREEN}https://${HELP_DOMAIN}${NC}"

echo -e "\n${BLUE}üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo -e "- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã: ${YELLOW}certbot certificates${NC}"
echo -e "- –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${YELLOW}certbot renew --dry-run${NC}"
echo -e "- –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${YELLOW}certbot renew --force-renewal${NC}"
echo -e "- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å nginx: ${YELLOW}nginx -t${NC}"
echo -e "- –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å nginx: ${YELLOW}systemctl restart nginx${NC}"

echo -e "\n${BLUE}üìã –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:${NC}"
echo -e "- –õ–æ–≥–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SSL: ${YELLOW}/var/log/ssl-renewal.log${NC}"
echo -e "- –õ–æ–≥–∏ nginx: ${YELLOW}/var/log/nginx/error.log${NC}"
echo -e "- –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤: ${YELLOW}${DC[@]} ps${NC}"

echo -e "\n${BLUE}üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:${NC}"
echo -e "- –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å TLS 1.2/1.3"
echo -e "- –ó–∞–≥–æ–ª–æ–≤–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (HSTS, CSP, X-Frame-Options)"
echo -e "- –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –ø–æ—Ä—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ —Å localhost"
echo -e "- –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –∫–∞–∂–¥—ã–µ 2 –º–µ—Å—è—Ü–∞"

echo -e "\n${GREEN}SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –ø–æ HTTPS.${NC}"
