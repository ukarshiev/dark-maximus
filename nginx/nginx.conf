events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Логирование
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;
    
    # Основные настройки
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Upstream для docs сервиса (localhost для production)
    upstream docs_backend {
        server 127.0.0.1:3001;
        keepalive 32;
    }
    
    # Upstream для codex-docs сервиса (localhost для production)
    upstream codex_docs_backend {
        server 127.0.0.1:3002;
        keepalive 32;
    }
    
    # Upstream для bot сервиса (localhost для production)
    upstream bot_backend {
        server 127.0.0.1:1488;
        keepalive 32;
    }
    
    # Конфигурация для docs (будет заменена на переменные в install.sh)
    server {
        listen 80;
        server_name docs.example.com;
        
        # Проксирование на docs сервис (временно без SSL)
        location / {
            proxy_pass http://docs_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Таймауты
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Health check
        location /health {
            proxy_pass http://docs_backend/health;
            access_log off;
        }
    }
    
    # Конфигурация для help (будет заменена на переменные в install.sh)
    server {
        listen 80;
        server_name help.example.com;
        
        # Проксирование на codex-docs сервис (временно без SSL)
        location / {
            proxy_pass http://codex_docs_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Таймауты
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Health check
        location /health {
            proxy_pass http://codex_docs_backend/;
            access_log off;
        }
    }
    
    # Конфигурация для panel (будет заменена на переменные в install.sh)
    server {
        listen 80;
        server_name panel.example.com;
        
        # Проксирование на bot сервис (временно без SSL)
        location / {
            proxy_pass http://bot_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Таймауты
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
    }
    
    # Конфигурация по умолчанию для неопознанных доменов
    server {
        listen 80 default_server;
        server_name _;
        return 444;
    }
    
}
