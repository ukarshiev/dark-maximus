#!/usr/bin/env bash

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
RED='\033[0;31m'
NC='\033[0m'

handle_error() {
    echo -e "\n${RED}–û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–µ $1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞.${NC}"
    exit 1
}
trap 'handle_error $LINENO' ERR

read_input() {
    read -p "$1" "$2" < /dev/tty
}

read_input_yn() {
    read -p "$1" -n 1 -r REPLY < /dev/tty
    echo
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞
check_port() {
    local port=$1
    local service_name=$2
    
    if netstat -tuln 2>/dev/null | grep -q ":$port " || ss -tuln 2>/dev/null | grep -q ":$port "; then
        local process=$(lsof -ti:$port 2>/dev/null | head -1)
        if [ -n "$process" ]; then
            local process_name=$(ps -p $process -o comm= 2>/dev/null || echo "unknown")
            echo -e "${RED}‚ùå –ü–æ—Ä—Ç $port –∑–∞–Ω—è—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ–º $process_name (PID: $process)${NC}"
            echo -e "${YELLOW}   –≠—Ç–æ—Ç –ø–æ—Ä—Ç –Ω—É–∂–µ–Ω –¥–ª—è $service_name${NC}"
            return 1
        fi
    fi
    echo -e "${GREEN}‚úÖ –ü–æ—Ä—Ç $port —Å–≤–æ–±–æ–¥–µ–Ω${NC}"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–æ—Ä—Ç–∞ –≤ firewall
open_firewall_port() {
    local port=$1
    local protocol=${2:-tcp}
    
    # UFW (Ubuntu/Debian)
    if command -v ufw &> /dev/null && sudo ufw status | grep -q 'Status: active'; then
        echo -e "${YELLOW}–û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç $port –≤ UFW...${NC}"
        sudo ufw allow $port/$protocol
        echo -e "${GREEN}‚úî –ü–æ—Ä—Ç $port/$protocol –æ—Ç–∫—Ä—ã—Ç –≤ UFW${NC}"
    fi
    
    # iptables (–µ—Å–ª–∏ UFW –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
    if command -v iptables &> /dev/null; then
        echo -e "${YELLOW}–û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç $port –≤ iptables...${NC}"
        sudo iptables -A INPUT -p $protocol --dport $port -j ACCEPT 2>/dev/null || true
        echo -e "${GREEN}‚úî –ü–æ—Ä—Ç $port/$protocol –æ—Ç–∫—Ä—ã—Ç –≤ iptables${NC}"
    fi
    
    # firewalld (CentOS/RHEL)
    if command -v firewall-cmd &> /dev/null && sudo firewall-cmd --state &> /dev/null; then
        echo -e "${YELLOW}–û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç $port –≤ firewalld...${NC}"
        sudo firewall-cmd --permanent --add-port=$port/$protocol
        sudo firewall-cmd --reload
        echo -e "${GREEN}‚úî –ü–æ—Ä—Ç $port/$protocol –æ—Ç–∫—Ä—ã—Ç –≤ firewalld${NC}"
    fi
}

REPO_URL="https://github.com/ukarshiev/dark-maximus.git"
PROJECT_DIR="dark-maximus"
NGINX_CONF_FILE="/etc/nginx/sites-available/${PROJECT_DIR}.conf"

echo -e "${GREEN}--- –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è dark-maximus ---${NC}"

if [ -f "$NGINX_CONF_FILE" ]; then
    echo -e "\n${CYAN}–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è. –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.${NC}"

    if [ ! -d "$PROJECT_DIR" ]; then
        echo -e "${RED}–û—à–∏–±–∫–∞: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –ø–∞–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ '${PROJECT_DIR}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!${NC}"
        echo -e "${YELLOW}–í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª–∏ –∏–ª–∏ —É–¥–∞–ª–∏–ª–∏ –ø–∞–ø–∫—É. –î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–¥–∞–ª–∏—Ç–µ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–Ω–æ–≤–æ:${NC}"
        echo -e "sudo rm ${NGINX_CONF_FILE}"
        exit 1
    fi

    cd $PROJECT_DIR

    echo -e "\n${CYAN}–®–∞–≥ 1: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Git...${NC}"
    git pull
    echo -e "${GREEN}‚úî –ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.${NC}"

    echo -e "\n${CYAN}–®–∞–≥ 2: –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docker-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
    sudo docker-compose down --remove-orphans && sudo docker-compose up -d --build
    
    echo -e "\n${CYAN}–®–∞–≥ 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...${NC}"
    if [ -f "setup-admin-docs.sh" ]; then
        chmod +x setup-admin-docs.sh
        bash setup-admin-docs.sh
        echo -e "${GREEN}‚úî –ê–¥–º–∏–Ω—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞.${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç setup-admin-docs.sh –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...${NC}"
    fi
    
    echo -e "\n\n${GREEN}==============================================${NC}"
    echo -e "${GREEN}      üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! üéâ      ${NC}"
    echo -e "${GREEN}==============================================${NC}"
    echo -e "\n–ë–æ—Ç –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω."
    echo -e "\n${CYAN}üì± –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
    echo -e "\n${YELLOW}1. –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç –∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:${NC}"
    echo -e "   - ${GREEN}http://localhost:1488/login${NC}"
    echo -e "\n${YELLOW}2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:${NC}"
    echo -e "   - ${GREEN}http://localhost:3001${NC}"
    echo -e "\n${YELLOW}3. –ê–¥–º–∏–Ω—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è (Codex.docs):${NC}"
    echo -e "   - ${GREEN}http://localhost:3002${NC}"
    echo -e "\n"

    exit 0
fi

echo -e "\n${YELLOW}–°—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞...${NC}"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
echo -e "\n${YELLOW}–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 10-30 –º–∏–Ω—É—Ç. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): ${NC}"
read_input_yn
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${CYAN}–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...${NC}"
    sudo apt update
    sudo apt upgrade -y
    sudo apt dist-upgrade -y
    sudo apt autoremove -y
    sudo apt autoclean
    echo -e "${GREEN}‚úî –°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.${NC}"
    
    echo -e "${YELLOW}‚ö†Ô∏è  –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ–π—á–∞—Å? (y/n): ${NC}"
    read_input_yn
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo -e "${YELLOW}–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–∏—Å—Ç–µ–º—É...${NC}"
        sudo reboot
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã.${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ firewall
echo -e "\n${CYAN}–®–∞–≥ 0: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ firewall...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ—Ä—Ç—ã
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–Ω—è—Ç–æ—Å—Ç—å –ø–æ—Ä—Ç–æ–≤...${NC}"
PORT_CONFLICTS=0

check_port 80 "HTTP (–¥–ª—è SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤)" || PORT_CONFLICTS=1
check_port 443 "HTTPS (–æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ä—Ç)" || PORT_CONFLICTS=1
check_port 1488 "Telegram Bot" || PORT_CONFLICTS=1
check_port 3001 "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è" || PORT_CONFLICTS=1
check_port 3002 "–ê–¥–º–∏–Ω—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è" || PORT_CONFLICTS=1

if [ $PORT_CONFLICTS -eq 1 ]; then
    echo -e "\n${RED}‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –ø–æ—Ä—Ç–æ–≤!${NC}"
    echo -e "${YELLOW}–î–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º:${NC}"
    echo -e "1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ —Å–µ—Ä–≤–∏—Å—ã"
    echo -e "2. –ò–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø–æ—Ä—Ç—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    echo -e "3. –ò–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –ø–æ—Å–ª–µ —Ä–µ—à–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤"
    
    read_input_yn "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã? (y/n): "
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo -e "${RED}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞. –†–µ—à–∏—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –ø–æ—Ä—Ç–æ–≤ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞.${NC}"
        exit 1
    fi
fi

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall
echo -e "\n${YELLOW}–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall...${NC}"
open_firewall_port 80 tcp
open_firewall_port 443 tcp
open_firewall_port 1488 tcp
open_firewall_port 3001 tcp
open_firewall_port 3002 tcp

echo -e "${GREEN}‚úî –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ firewall –∑–∞–≤–µ—Ä—à–µ–Ω—ã.${NC}"

echo -e "\n${CYAN}–®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
install_package() {
    if ! command -v $1 &> /dev/null; then
        echo -e "${YELLOW}–£—Ç–∏–ª–∏—Ç–∞ '$1' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...${NC}"
        sudo apt-get update
        sudo apt-get install -y $2
    else
        echo -e "${GREEN}‚úî $1 —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
    fi
}

install_package "git" "git"
install_package "docker" "docker.io"
install_package "docker-compose" "docker-compose"
install_package "nginx" "nginx"
install_package "curl" "curl"
install_package "certbot" "certbot python3-certbot-nginx"

for service in docker nginx; do
    if ! sudo systemctl is-active --quiet $service; then
        echo -e "${YELLOW}–°–µ—Ä–≤–∏—Å $service –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É...${NC}"
        sudo systemctl start $service
        sudo systemctl enable $service
    fi
done
echo -e "${GREEN}‚úî –í—Å–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.${NC}"

echo -e "\n${CYAN}–®–∞–≥ 2: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...${NC}"
if [ ! -d "$PROJECT_DIR" ]; then
    git clone $REPO_URL
fi
cd $PROJECT_DIR
echo -e "${GREEN}‚úî –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≥–æ—Ç–æ–≤.${NC}"

echo -e "\n${CYAN}–®–∞–≥ 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–º–µ–Ω–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤...${NC}"

read_input "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, myvpn.com): " USER_INPUT_DOMAIN

if [ -z "$USER_INPUT_DOMAIN" ]; then
    echo -e "${RED}–û—à–∏–±–∫–∞: –î–æ–º–µ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞.${NC}"
    exit 1
fi

DOMAIN=$(echo "$USER_INPUT_DOMAIN" | sed -e 's%^https\?://%%' -e 's%/.*$%%')

# –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–æ–º–µ–Ω–∞
if [[ "$DOMAIN" != "localhost" && "$DOMAIN" != *"."* ]]; then
    echo -e "${RED}–û—à–∏–±–∫–∞: –î–æ–º–µ–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ—á–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, example.com) –∏–ª–∏ –±—ã—Ç—å localhost${NC}"
    exit 1
fi

read_input "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π email (–¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –Ω–∞ –Ω–µ–≥–æ –ø—Ä–∏–¥–µ—Ç –ø–∏—Å—å–º–æ –æ—Ç Let's Encrypt): " EMAIL

echo -e "${GREEN}‚úî –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω: ${DOMAIN}${NC}"

# –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥–¥–æ–º–µ–Ω—ã (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞)
# –ë–µ—Ä–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π –¥–æ–º–µ–Ω (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –ª–µ–π–±–ª–∞) –¥–ª—è –ø–æ–¥–¥–æ–º–µ–Ω–æ–≤
BASE_DOMAIN=$(echo "$DOMAIN" | awk -F. '{ if (NF>=2) print $(NF-1)"."$NF; else print $0 }')

MAIN_DOMAIN="$DOMAIN"
DOCS_DOMAIN="docs.$BASE_DOMAIN"
HELP_DOMAIN="help.$BASE_DOMAIN"

echo -e "${CYAN}–ü–æ–¥–¥–æ–º–µ–Ω—ã –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:${NC}"
echo -e "  - ${YELLOW}${MAIN_DOMAIN}${NC} (–æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç)"
echo -e "  - ${YELLOW}${DOCS_DOMAIN}${NC} (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è)"
echo -e "  - ${YELLOW}${HELP_DOMAIN}${NC} (–∞–¥–º–∏–Ω—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è)"

read_input_yn "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –ø–æ–¥–¥–æ–º–µ–Ω—ã? (y/n): "
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    read_input "–£–∫–∞–∂–∏—Ç–µ –ø–æ–¥–¥–æ–º–µ–Ω –¥–ª—è –ø–∞–Ω–µ–ª–∏: " MAIN_DOMAIN
    read_input "–£–∫–∞–∂–∏—Ç–µ –ø–æ–¥–¥–æ–º–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: " DOCS_DOMAIN
    read_input "–£–∫–∞–∂–∏—Ç–µ –ø–æ–¥–¥–æ–º–µ–Ω –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: " HELP_DOMAIN
fi

echo -e "${GREEN}‚úî –î–æ–º–µ–Ω—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã:${NC}"
echo -e "  - –û—Å–Ω–æ–≤–Ω–æ–π: ${MAIN_DOMAIN}"
echo -e "  - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: ${DOCS_DOMAIN}"
echo -e "  - –ê–¥–º–∏–Ω-–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: ${HELP_DOMAIN}"

SERVER_IP=$(curl -s ifconfig.me || hostname -I | awk '{print $1}')
echo -e "${YELLOW}IP –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP${NC}"

echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—è–µ–º DNS-–∑–∞–ø–∏—Å–∏...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ dig, –µ—Å–ª–∏ –Ω–µ—Ç - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
if ! command -v dig &> /dev/null; then
    echo -e "${YELLOW}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º dnsutils –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ DNS...${NC}"
    sudo apt update && sudo apt install -y dnsutils
fi

for check_domain in $MAIN_DOMAIN $DOCS_DOMAIN $HELP_DOMAIN; do
    DOMAIN_IP=$(dig +short $check_domain @8.8.8.8 2>/dev/null | tail -n1)
    if [ -n "$DOMAIN_IP" ]; then
        echo -e "  - ${check_domain} ‚Üí ${DOMAIN_IP}"
        if [ "$SERVER_IP" != "$DOMAIN_IP" ]; then
            echo -e "${RED}‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: DNS-–∑–∞–ø–∏—Å—å –¥–ª—è ${check_domain} –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ IP-–∞–¥—Ä–µ—Å —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞!${NC}"
        else
            echo -e "${GREEN}‚úî DNS-–∑–∞–ø–∏—Å—å –¥–ª—è ${check_domain} –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
        fi
    else
        echo -e "  - ${check_domain} ‚Üí ${RED}–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å IP-–∞–¥—Ä–µ—Å${NC}"
        echo -e "${RED}‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å DNS-–∑–∞–ø–∏—Å—å –¥–ª—è ${check_domain}!${NC}"
    fi
done

read_input_yn "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É? (y/n): "
if [[ ! $REPLY =~ ^[Yy]$ ]]; then echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞."; exit 1; fi

# –£–±–∏—Ä–∞–µ–º –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –ø–æ—Ä—Ç YooKassa - –∏—Å–ø–æ–ª—å–∑—É–µ–º 443 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
YOOKASSA_PORT=443

echo -e "${YELLOW}–ü–æ–ª—É—á–∞–µ–º SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤...${NC}"

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
echo -e "${YELLOW}–°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx...${NC}"
sudo mkdir -p /var/www/certbot

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–æ–º–µ–Ω–∞
for domain in $MAIN_DOMAIN $DOCS_DOMAIN $HELP_DOMAIN; do
    sudo tee /etc/nginx/sites-available/${domain}-temp.conf > /dev/null <<EOF
server {
    listen 80;
    server_name ${domain};
    
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    location / {
        return 200 'OK';
        add_header Content-Type text/plain;
    }
}
EOF
    sudo ln -sf /etc/nginx/sites-available/${domain}-temp.conf /etc/nginx/sites-enabled/
done

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º Nginx
sudo nginx -t && sudo systemctl reload nginx

# –ü–æ–ª—É—á–∞–µ–º –æ–¥–∏–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è –≤—Å–µ—Ö –ø–æ–¥–¥–æ–º–µ–Ω–æ–≤
sudo certbot certonly --webroot -w /var/www/certbot \
    -d $MAIN_DOMAIN -d $DOCS_DOMAIN -d $HELP_DOMAIN \
    --email $EMAIL --agree-tos --non-interactive

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–∞–∑–æ–≤–æ–µ –∏–º—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ (–ø–µ—Ä–≤—ã–π –¥–æ–º–µ–Ω)
CERT_NAME=$MAIN_DOMAIN

# –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥–∏
for domain in $MAIN_DOMAIN $DOCS_DOMAIN $HELP_DOMAIN; do
    sudo rm -f /etc/nginx/sites-enabled/${domain}-temp.conf
    sudo rm -f /etc/nginx/sites-available/${domain}-temp.conf
done

echo -e "${GREEN}‚úî SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –¥–ª—è –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤.${NC}"

echo -e "\n${CYAN}–®–∞–≥ 4: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx...${NC}"

NGINX_ENABLED_FILE="/etc/nginx/sites-enabled/${PROJECT_DIR}.conf"

echo -e "–°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
sudo rm -rf /etc/nginx/sites-enabled/default
sudo bash -c "cat > $NGINX_CONF_FILE" <<EOF
# –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç
server {
    listen ${YOOKASSA_PORT} ssl http2;
    listen [::]:${YOOKASSA_PORT} ssl http2;
    server_name ${MAIN_DOMAIN};

    ssl_certificate /etc/letsencrypt/live/${CERT_NAME}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${CERT_NAME}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # –ü—Ä–æ–∫—Å–∏ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç
    location / {
        proxy_pass http://127.0.0.1:1488;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
server {
    listen ${YOOKASSA_PORT} ssl http2;
    listen [::]:${YOOKASSA_PORT} ssl http2;
    server_name ${DOCS_DOMAIN};

    ssl_certificate /etc/letsencrypt/live/${CERT_NAME}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${CERT_NAME}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # –ü—Ä–æ–∫—Å–∏ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
    location / {
        proxy_pass http://127.0.0.1:3001;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}

# –ê–¥–º–∏–Ω—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è (Codex.docs)
server {
    listen ${YOOKASSA_PORT} ssl http2;
    listen [::]:${YOOKASSA_PORT} ssl http2;
    server_name ${HELP_DOMAIN};

    ssl_certificate /etc/letsencrypt/live/${CERT_NAME}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${CERT_NAME}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # –ü—Ä–æ–∫—Å–∏ –Ω–∞ –∞–¥–º–∏–Ω—Å–∫—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
    location / {
        proxy_pass http://127.0.0.1:3002;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        
        # WebSocket –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–ª—è Codex.docs
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

# HTTP —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã –Ω–∞ HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name ${MAIN_DOMAIN} ${DOCS_DOMAIN} ${HELP_DOMAIN};
    return 301 https://\$server_name\$request_uri;
}
EOF

if [ ! -f "$NGINX_ENABLED_FILE" ]; then
    sudo ln -s $NGINX_CONF_FILE $NGINX_ENABLED_FILE
fi

echo -e "${GREEN}‚úî –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤.${NC}"
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º Nginx...${NC}"
sudo nginx -t && sudo systemctl reload nginx

echo -e "\n${CYAN}–®–∞–≥ 5: –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ Docker-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞...${NC}"
if [ "$(sudo docker-compose ps -q)" ]; then
    sudo docker-compose down
fi
sudo docker-compose up -d --build

echo -e "\n${CYAN}–®–∞–≥ 6: –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...${NC}"
if [ -f "setup-admin-docs.sh" ]; then
    chmod +x setup-admin-docs.sh
    bash setup-admin-docs.sh
    echo -e "${GREEN}‚úî –ê–¥–º–∏–Ω—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞.${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç setup-admin-docs.sh –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...${NC}"
fi

echo -e "\n\n${GREEN}=====================================================${NC}"
echo -e "${GREEN}      üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω—ã! üéâ      ${NC}"
echo -e "${GREEN}=====================================================${NC}"
echo -e "\n${CYAN}üì± –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
echo -e "\n${YELLOW}1. –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç –∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:${NC}"
echo -e "   - ${GREEN}https://${MAIN_DOMAIN}:${YOOKASSA_PORT}/login${NC}"
echo -e "\n${YELLOW}2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:${NC}"
echo -e "   - ${GREEN}https://${DOCS_DOMAIN}:${YOOKASSA_PORT}${NC}"
echo -e "\n${YELLOW}3. –ê–¥–º–∏–Ω—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è (Codex.docs):${NC}"
echo -e "   - ${GREEN}https://${HELP_DOMAIN}:${YOOKASSA_PORT}${NC}"
echo -e "\n${CYAN}üîê –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:${NC}"
echo -e "   - –õ–æ–≥–∏–Ω:   ${GREEN}admin${NC}"
echo -e "   - –ü–∞—Ä–æ–ª—å:  ${GREEN}admin${NC}"
echo -e "\n${RED}‚ö†Ô∏è  –í–ê–ñ–ù–û - –ü–ï–†–í–´–ï –®–ê–ì–ò:${NC}"
echo -e "1. –í–æ–π–¥–∏—Ç–µ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∏ ${RED}–Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Å–º–µ–Ω–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å${NC}."
echo -e "2. –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ '–ù–∞—Å—Ç—Ä–æ–π–∫–∏' –≤–≤–µ–¥–∏—Ç–µ:"
echo -e "   ‚Ä¢ –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞"
echo -e "   ‚Ä¢ Username –±–æ—Ç–∞ (–±–µ–∑ @)"
echo -e "   ‚Ä¢ –í–∞—à Telegram ID"
echo -e "3. –ù–∞–∂–º–∏—Ç–µ '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏' –∏ –∑–∞—Ç–µ–º '–ó–∞–ø—É—Å—Ç–∏—Ç—å –ë–æ—Ç–∞'."
echo -e "\n${CYAN}üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º:${NC}"
echo -e "\n${YELLOW}YooKassa webhook URL:${NC}"
echo -e "   ${GREEN}https://${MAIN_DOMAIN}:${YOOKASSA_PORT}/yookassa-webhook${NC}"
echo -e "\n${YELLOW}CryptoBot webhook URL:${NC}"
echo -e "   ${GREEN}https://${MAIN_DOMAIN}:${YOOKASSA_PORT}/cryptobot-webhook${NC}"
echo -e "\n${GREEN}üìñ –ê–¥–º–∏–Ω—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è (–≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏):${NC}"
echo -e "   - ${YELLOW}https://${HELP_DOMAIN}:${YOOKASSA_PORT}/installation${NC}"
echo -e "   - ${YELLOW}https://${HELP_DOMAIN}:${YOOKASSA_PORT}/quickstart${NC}"
echo -e "   - ${YELLOW}https://${HELP_DOMAIN}:${YOOKASSA_PORT}/guide${NC}"
echo -e "   - ${YELLOW}https://${HELP_DOMAIN}:${YOOKASSA_PORT}/security${NC}"
echo -e "   - ${YELLOW}https://${HELP_DOMAIN}:${YOOKASSA_PORT}/api${NC}"
echo -e "\n"