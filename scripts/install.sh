#!/usr/bin/env bash
set -o errexit
set -o pipefail

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
RED='\033[0;31m'
NC='\033[0m'

handle_error() {
    echo -e "\n${RED}–û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–µ $1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞.${NC}"
    exit 1
}
trap 'handle_error $LINENO' ERR

read_input() {
    read -p "$1" "$2" < /dev/tty
}

read_input_yn() {
    read -p "$1" -n 1 -r REPLY < /dev/tty
    echo
}

REPO_URL="https://github.com/ukarshiev/dark-maximus.git"
PROJECT_DIR="dark-maximus"
NGINX_CONF_FILE="/etc/nginx/sites-available/${PROJECT_DIR}.conf"

echo -e "${GREEN}--- –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è dark-maximus ---${NC}"

if [ -f "$NGINX_CONF_FILE" ]; then
    echo -e "\n${CYAN}–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è. –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.${NC}"

    if [ ! -d "$PROJECT_DIR" ]; then
        echo -e "${RED}–û—à–∏–±–∫–∞: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –ø–∞–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ '${PROJECT_DIR}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!${NC}"
        echo -e "${YELLOW}–£–¥–∞–ª–∏—Ç–µ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–Ω–æ–≤–æ:${NC}"
        echo -e "sudo rm ${NGINX_CONF_FILE}"
        exit 1
    fi

    cd "$PROJECT_DIR"

    echo -e "\n${CYAN}–®–∞–≥ 1: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Git...${NC}"
    git pull
    echo -e "${GREEN}‚úî –ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.${NC}"

    echo -e "\n${CYAN}–®–∞–≥ 2: –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docker-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
    sudo docker-compose down --remove-orphans && sudo docker-compose up -d --build
    
    echo -e "\n${CYAN}–®–∞–≥ 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...${NC}"
    if [ -f "setup-admin-docs.sh" ]; then
        chmod +x setup-admin-docs.sh
        bash setup-admin-docs.sh
        echo -e "${GREEN}‚úî –ê–¥–º–∏–Ω—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞.${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç setup-admin-docs.sh –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...${NC}"
    fi
    
    echo -e "\n\n${GREEN}==============================================${NC}"
    echo -e "${GREEN}      üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! üéâ      ${NC}"
    echo -e "${GREEN}==============================================${NC}"
    echo -e "\n–ë–æ—Ç –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω."
    echo -e "\n${CYAN}üì± –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
    echo -e "\n${YELLOW}1. –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç –∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:${NC}"
    echo -e "   - ${GREEN}http://localhost:1488/login${NC}"
    echo -e "\n${YELLOW}2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:${NC}"
    echo -e "   - ${GREEN}http://localhost:3001${NC}"
    echo -e "\n${YELLOW}3. –ê–¥–º–∏–Ω—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è (Codex.docs):${NC}"
    echo -e "   - ${GREEN}http://localhost:3002${NC}"
    echo -e "\n"

    exit 0
fi

echo -e "\n${YELLOW}–°—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞...${NC}"

echo -e "\n${CYAN}–®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
install_package() {
    if ! command -v "$1" &> /dev/null; then
        echo -e "${YELLOW}–£—Ç–∏–ª–∏—Ç–∞ '$1' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...${NC}"
        sudo apt-get update
        sudo apt-get install -y $2
    else
        echo -e "${GREEN}‚úî $1 —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
    fi
}

install_package "git" "git"
install_package "docker" "docker.io"
install_package "docker-compose" "docker-compose"
install_package "nginx" "nginx"
install_package "curl" "curl"
install_package "certbot" "certbot python3-certbot-nginx"
install_package "dig" "dnsutils"

for service in docker nginx; do
    if ! sudo systemctl is-active --quiet "$service"; then
        echo -e "${YELLOW}–°–µ—Ä–≤–∏—Å $service –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É...${NC}"
        sudo systemctl start "$service"
        sudo systemctl enable "$service"
    fi
done
echo -e "${GREEN}‚úî –í—Å–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.${NC}"

echo -e "\n${CYAN}–®–∞–≥ 2: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...${NC}"
if [ ! -d "$PROJECT_DIR" ]; then
    git clone "$REPO_URL"
fi
cd "$PROJECT_DIR"
echo -e "${GREEN}‚úî –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≥–æ—Ç–æ–≤.${NC}"

echo -e "\n${CYAN}–®–∞–≥ 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–º–µ–Ω–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤...${NC}"

read_input "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, panel.dark-maximus.com): " USER_INPUT_DOMAIN

if [ -z "$USER_INPUT_DOMAIN" ]; then
    echo -e "${RED}–û—à–∏–±–∫–∞: –î–æ–º–µ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞.${NC}"
    exit 1
fi

# –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ–º–µ–Ω–∞
DOMAIN=$(echo "$USER_INPUT_DOMAIN" \
    | sed -e 's%^https\?://%%' -e 's%/.*$%%' -e 's/^www\.//')

read_input "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email (–¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ Let's Encrypt): " EMAIL
if [ -z "$EMAIL" ]; then
    echo -e "${RED}–û—à–∏–±–∫–∞: Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –≤—ã–ø—É—Å–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤.${NC}"
    exit 1
fi

echo -e "${GREEN}‚úî –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω: ${DOMAIN}${NC}"

# –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥–¥–æ–º–µ–Ω—ã: –±–µ—Ä—ë–º –±–∞–∑–æ–≤—ã–π –¥–æ–º–µ–Ω = –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–≤–∞ –ª–µ–π–±–ª–∞
BASE_DOMAIN=$(awk -F. '{if(NF>=2)print $(NF-1)"."$NF; else print $0}' <<< "$DOMAIN")
MAIN_DOMAIN="$DOMAIN"
DOCS_DOMAIN="docs.$BASE_DOMAIN"
HELP_DOMAIN="help.$BASE_DOMAIN"

echo -e "${CYAN}–ü–æ–¥–¥–æ–º–µ–Ω—ã –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:${NC}"
echo -e "  - ${YELLOW}${MAIN_DOMAIN}${NC} (–æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç)"
echo -e "  - ${YELLOW}${DOCS_DOMAIN}${NC} (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è)"
echo -e "  - ${YELLOW}${HELP_DOMAIN}${NC} (–∞–¥–º–∏–Ω—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è)"

read_input_yn "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –ø–æ–¥–¥–æ–º–µ–Ω—ã? (y/n): "
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    read_input "–í–≤–µ–¥–∏—Ç–µ –ø–æ–¥–¥–æ–º–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ (docs.your-domain.com): " DOCS_DOMAIN
    read_input "–í–≤–µ–¥–∏—Ç–µ –ø–æ–¥–¥–æ–º–µ–Ω –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ (help.your-domain.com): " HELP_DOMAIN
fi

echo -e "${GREEN}‚úî –î–æ–º–µ–Ω—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã:${NC}"
echo -e "  - –û—Å–Ω–æ–≤–Ω–æ–π: ${MAIN_DOMAIN}"
echo -e "  - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: ${DOCS_DOMAIN}"
echo -e "  - –ê–¥–º–∏–Ω-–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: ${HELP_DOMAIN}"

SERVER_IP=$(curl -s ifconfig.me || hostname -I | awk '{print $1}')
echo -e "${YELLOW}IP –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP${NC}"

echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—è–µ–º DNS-–∑–∞–ø–∏—Å–∏...${NC}"
for check_domain in $MAIN_DOMAIN $DOCS_DOMAIN $HELP_DOMAIN; do
    DOMAIN_IP=$(dig +short "$check_domain" @8.8.8.8 | tail -n1)
    echo -e "  - ${check_domain} ‚Üí ${DOMAIN_IP}"
    if [ "$SERVER_IP" != "$DOMAIN_IP" ]; then
        echo -e "${RED}‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: DNS-–∑–∞–ø–∏—Å—å –¥–ª—è ${check_domain} –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ IP-–∞–¥—Ä–µ—Å —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞!${NC}"
    fi
done

read_input_yn "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É? (y/n): "
if [[ ! $REPLY =~ ^[Yy]$ ]]; then echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞."; exit 1; fi

if command -v ufw &> /dev/null && sudo ufw status | grep -q 'Status: active'; then
    echo -e "${YELLOW}–û–±–Ω–∞—Ä—É–∂–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π —Ñ–∞–π—Ä–≤–æ–ª (ufw). –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç—ã...${NC}"
    sudo ufw allow 80/tcp
    sudo ufw allow 443/tcp
    sudo ufw allow 1488/tcp
    sudo ufw allow 8443/tcp
fi

echo -e "${YELLOW}–ü–æ–ª—É—á–∞–µ–º SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤...${NC}"
sudo certbot certonly --nginx -d "$MAIN_DOMAIN" -d "$DOCS_DOMAIN" -d "$HELP_DOMAIN" --email "$EMAIL" --agree-tos --non-interactive
echo -e "${GREEN}‚úî SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –¥–ª—è –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤.${NC}"

echo -e "\n${CYAN}–®–∞–≥ 4: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx...${NC}"
read_input "–ö–∞–∫–æ–π –ø–æ—Ä—Ç –≤—ã –±—É–¥–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –≤–µ–±—Ö—É–∫–æ–≤ YooKassa? (443 –∏–ª–∏ 8443, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 443): " YOOKASSA_PORT_INPUT
YOOKASSA_PORT=${YOOKASSA_PORT_INPUT:-443}

NGINX_ENABLED_FILE="/etc/nginx/sites-enabled/${PROJECT_DIR}.conf"

echo -e "–°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
sudo rm -rf /etc/nginx/sites-enabled/default
sudo bash -c "cat > $NGINX_CONF_FILE" <<EOF
# –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç
server {
    listen ${YOOKASSA_PORT} ssl http2;
    listen [::]:${YOOKASSA_PORT} ssl http2;
    server_name ${MAIN_DOMAIN};

    ssl_certificate /etc/letsencrypt/live/${MAIN_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${MAIN_DOMAIN}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # –ü—Ä–æ–∫—Å–∏ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç
    location / {
        proxy_pass http://127.0.0.1:1488;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
server {
    listen ${YOOKASSA_PORT} ssl http2;
    listen [::]:${YOOKASSA_PORT} ssl http2;
    server_name ${DOCS_DOMAIN};

    ssl_certificate /etc/letsencrypt/live/${DOCS_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOCS_DOMAIN}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # –ü—Ä–æ–∫—Å–∏ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
    location / {
        proxy_pass http://127.0.0.1:3001;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}

# –ê–¥–º–∏–Ω—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è (Codex.docs)
server {
    listen ${YOOKASSA_PORT} ssl http2;
    listen [::]:${YOOKASSA_PORT} ssl http2;
    server_name ${HELP_DOMAIN};

    ssl_certificate /etc/letsencrypt/live/${HELP_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${HELP_DOMAIN}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # –ü—Ä–æ–∫—Å–∏ –Ω–∞ –∞–¥–º–∏–Ω—Å–∫—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
    location / {
        proxy_pass http://127.0.0.1:3002;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        
        # WebSocket –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–ª—è Codex.docs
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
EOF

if [ ! -f "$NGINX_ENABLED_FILE" ]; then
    sudo ln -s "$NGINX_CONF_FILE" "$NGINX_ENABLED_FILE"
fi

echo -e "${GREEN}‚úî –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤.${NC}"
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º Nginx...${NC}"
sudo nginx -t && sudo systemctl reload nginx
