# ============================================================================
# Setup Test Environment - Python UTF-8 Configuration
# ============================================================================
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã Python —Ç–µ—Å—Ç–æ–≤
# —Å Unicode-—Å–∏–º–≤–æ–ª–∞–º–∏ (—ç–º–æ–¥–∑–∏) –≤ Windows PowerShell
# ============================================================================

param(
    [switch]$Global,  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≥–ª–æ–±–∞–ª—å–Ω–æ –≤ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    [switch]$Test,    # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    [switch]$Help     # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
)

if ($Help) {
    Write-Host "Setup Test Environment - Python UTF-8 Configuration" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:" -ForegroundColor Yellow
    Write-Host "  .\setup_test_environment.ps1           # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏"
    Write-Host "  .\setup_test_environment.ps1 -Global   # –ì–ª–æ–±–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã"
    Write-Host "  .\setup_test_environment.ps1 -Test     # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ + –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
    Write-Host "  .\setup_test_environment.ps1 -Help     # –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    Write-Host ""
    Write-Host "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:" -ForegroundColor Yellow
    Write-Host "  -Global    –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ –≤ —Å–∏—Å—Ç–µ–º–µ"
    Write-Host "  -Test      –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
    Write-Host "  -Help      –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"
    exit 0
}

Write-Host "=" * 80 -ForegroundColor Cyan
Write-Host "–ù–ê–°–¢–†–û–ô–ö–ê –û–ö–†–£–ñ–ï–ù–ò–Ø –î–õ–Ø PYTHON –¢–ï–°–¢–û–í" -ForegroundColor Cyan
Write-Host "=" * 80 -ForegroundColor Cyan
Write-Host ""

# ----------------------------------------------------------------------------
# 1. –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ï–ì–û –°–û–°–¢–û–Ø–ù–ò–Ø
# ----------------------------------------------------------------------------
Write-Host "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è Python..." -ForegroundColor Yellow

try {
    $pythonVersion = python --version 2>&1
    if ($LASTEXITCODE -eq 0) {
        Write-Host "   ‚úì Python –Ω–∞–π–¥–µ–Ω: $pythonVersion" -ForegroundColor Green
    } else {
        Write-Host "   ‚úó Python –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Red
        Write-Host "   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python –∏ –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ PATH" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "   ‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ Python: $_" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–¥–∏—Ä–æ–≤–∫–∏
Write-Host ""
Write-Host "2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ–¥–∏—Ä–æ–≤–∫–∏..." -ForegroundColor Yellow

$currentSettings = python -c @"
import sys
print(f'Default encoding: {sys.getdefaultencoding()}')
print(f'stdout encoding: {sys.stdout.encoding}')
print(f'stderr encoding: {sys.stderr.encoding}')
print(f'PYTHONIOENCODING: {sys.getenv("PYTHONIOENCODING", "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")}')
print(f'PYTHONUTF8: {sys.getenv("PYTHONUTF8", "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")}')
"@ 2>&1

Write-Host "   –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:" -ForegroundColor Gray
$currentSettings | ForEach-Object { Write-Host "     $_" -ForegroundColor Gray }

# ----------------------------------------------------------------------------
# 2. –ù–ê–°–¢–†–û–ô–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø
# ----------------------------------------------------------------------------
Write-Host ""
Write-Host "3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..." -ForegroundColor Yellow

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
$envVars = @{
    'PYTHONIOENCODING' = 'utf-8'
    'PYTHONUTF8' = '1'
    'LESSCHARSET' = 'utf-8'
}

foreach ($var in $envVars.GetEnumerator()) {
    try {
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
        Set-Item -Path "env:$($var.Key)" -Value $var.Value -Force
        Write-Host "   ‚úì $($var.Key) = $($var.Value)" -ForegroundColor Green
        
        # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
        if ($Global) {
            try {
                [Environment]::SetEnvironmentVariable($var.Key, $var.Value, [EnvironmentVariableTarget]::User)
                Write-Host "     ‚úì –ì–ª–æ–±–∞–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" -ForegroundColor Green
            } catch {
                Write-Warning "     ‚úó –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ: $_"
            }
        }
    } catch {
        Write-Warning "   ‚úó –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ $($var.Key): $_"
    }
}

# ----------------------------------------------------------------------------
# 3. –ù–ê–°–¢–†–û–ô–ö–ê –ö–û–ù–°–û–õ–ò
# ----------------------------------------------------------------------------
Write-Host ""
Write-Host "4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Å–æ–ª–∏..." -ForegroundColor Yellow

try {
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º UTF-8 –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
    [Console]::InputEncoding = [System.Text.Encoding]::UTF8
    [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
    chcp 65001 | Out-Null
    
    Write-Host "   ‚úì –ö–æ–¥–∏—Ä–æ–≤–∫–∞ –∫–æ–Ω—Å–æ–ª–∏: UTF-8" -ForegroundColor Green
} catch {
    Write-Warning "   ‚úó –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω—Å–æ–ª–∏: $_"
}

# ----------------------------------------------------------------------------
# 5. –ü–†–û–í–ï–†–ö–ê –ù–ê–°–¢–†–û–ï–ö
# ----------------------------------------------------------------------------
Write-Host ""
Write-Host "5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫..." -ForegroundColor Yellow

$newSettings = python -c @"
import sys
print(f'Default encoding: {sys.getdefaultencoding()}')
print(f'stdout encoding: {sys.stdout.encoding}')
print(f'stderr encoding: {sys.stderr.encoding}')
print(f'PYTHONIOENCODING: {sys.getenv("PYTHONIOENCODING", "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")}')
print(f'PYTHONUTF8: {sys.getenv("PYTHONUTF8", "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")}')
"@ 2>&1

Write-Host "   –ù–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:" -ForegroundColor Gray
$newSettings | ForEach-Object { Write-Host "     $_" -ForegroundColor Gray }

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–º–µ–Ω–∏–ª–∏—Å—å
$utf8Configured = $newSettings -match "utf-8|UTF-8"
if ($utf8Configured.Count -ge 3) {
    Write-Host "   ‚úì –ù–∞—Å—Ç—Ä–æ–π–∫–∏ UTF-8 –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
} else {
    Write-Host "   ‚ö† –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–≥—É—Ç –Ω–µ –ø—Ä–∏–º–µ–Ω–∏—Ç—å—Å—è –¥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ PowerShell" -ForegroundColor Yellow
}

# ----------------------------------------------------------------------------
# 6. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï UNICODE –í–´–í–û–î–ê
# ----------------------------------------------------------------------------
Write-Host ""
Write-Host "6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Unicode –≤—ã–≤–æ–¥–∞..." -ForegroundColor Yellow

try {
    $testResult = python -c @"
try:
    print('‚úÖ –¢–µ—Å—Ç —ç–º–æ–¥–∑–∏: –ü—Ä–∏–≤–µ—Ç, –º–∏—Ä! üöÄ')
    print('‚úÖ –†—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏')
    print('‚úÖ –°–º–µ—à–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: Hello ‰∏ñÁïå! üåç')
    print('SUCCESS: –í—Å–µ —Å–∏–º–≤–æ–ª—ã –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')
except UnicodeEncodeError as e:
    print(f'ERROR: –û—à–∏–±–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏: {e}')
    print('FAILED: –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π –Ω–µ —Ä–µ—à–µ–Ω–∞')
"@ 2>&1

    Write-Host "   –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞:" -ForegroundColor Gray
    $testResult | ForEach-Object { Write-Host "     $_" -ForegroundColor Gray }
    
    if ($testResult -match "SUCCESS") {
        Write-Host "   ‚úì Unicode —Ç–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
    } else {
        Write-Host "   ‚úó Unicode —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω" -ForegroundColor Red
    }
} catch {
    Write-Warning "   ‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Unicode: $_"
}

# ----------------------------------------------------------------------------
# 7. –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í (–µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–æ)
# ----------------------------------------------------------------------------
if ($Test) {
    Write-Host ""
    Write-Host "7. –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..." -ForegroundColor Yellow
    
    $testFiles = @(
        "test_deeplink_comma_format.py",
        "test_deeplink_base64.py", 
        "test_deeplink_integration.py",
        "test_deeplink_functionality.py",
        "test_deeplink_new_user.py",
        "test_group_edit_fix.py"
    )
    
    foreach ($testFile in $testFiles) {
        $testPath = Join-Path $PSScriptRoot $testFile
        if (Test-Path $testPath) {
            Write-Host "   –ó–∞–ø—É—Å–∫ $testFile..." -ForegroundColor Gray
            try {
                python $testPath
                if ($LASTEXITCODE -eq 0) {
                    Write-Host "     ‚úì $testFile - —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
                } else {
                    Write-Host "     ‚úó $testFile - –æ—à–∏–±–∫–∏" -ForegroundColor Red
                }
            } catch {
                Write-Host "     ‚úó $testFile - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: $_" -ForegroundColor Red
            }
        } else {
            Write-Host "     ‚ö† $testFile - —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Yellow
        }
    }
}

# ----------------------------------------------------------------------------
# 8. –ò–ù–°–¢–†–£–ö–¶–ò–ò
# ----------------------------------------------------------------------------
Write-Host ""
Write-Host "=" * 80 -ForegroundColor Cyan
Write-Host "–ò–ù–°–¢–†–£–ö–¶–ò–ò" -ForegroundColor Cyan
Write-Host "=" * 80 -ForegroundColor Cyan

if ($Global) {
    Write-Host "‚úì –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω–æ" -ForegroundColor Green
    Write-Host "  –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ PowerShell –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π" -ForegroundColor Yellow
} else {
    Write-Host "‚úì –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏" -ForegroundColor Green
    Write-Host "  –î–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: .\setup_test_environment.ps1 -Global" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:" -ForegroundColor Cyan
Write-Host "  python tests/test_encoding.py" -ForegroundColor Gray
Write-Host ""
Write-Host "–î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:" -ForegroundColor Cyan
Write-Host "  .\setup_test_environment.ps1 -Test" -ForegroundColor Gray
Write-Host ""

if ($Test) {
    Write-Host "‚úì –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!" -ForegroundColor Green
} else {
    Write-Host "‚úì –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
}
