#!/usr/bin/env bash
set -o errexit
set -o pipefail
set -o nounset

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
handle_error() {
    local line_number="${1:-–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ}"
    echo -e "\n${RED}–û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–µ $line_number. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞.${NC}"
    exit 1
}
trap 'handle_error $LINENO' ERR

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–≤–æ–¥–∞
read_input() {
    local prompt="$1"
    local var_name="$2"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–∫—Ä–∏–ø—Ç —á–µ—Ä–µ–∑ pipe (curl | bash)
    if [ ! -t 0 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ pipe. –î–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–æ–º–µ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤:${NC}"
        echo -e "${CYAN}   1. –ß–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è):${NC}"
        echo -e "${CYAN}      curl -sSL https://raw.githubusercontent.com/ukarshiev/dark-maximus/main/install.sh | sudo bash    DOMAIN=example.com${NC}"
        echo -e "${CYAN}   2. –°–∫–∞—á–∞–π—Ç–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω–æ:${NC}"
        echo -e "${CYAN}      wget https://raw.githubusercontent.com/ukarshiev/dark-maximus/main/install.sh${NC}"
        echo -e "${CYAN}      chmod +x install.sh${NC}"
        echo -e "${CYAN}      sudo ./install.sh example.com${NC}"
        echo -e "${CYAN}   3. –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞:${NC}"
        echo -e "${CYAN}      cd /opt/dark-maximus && sudo ./install.sh example.com${NC}"
        exit 1
    fi
    
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤–≤–æ–¥
    read -p "$prompt" "$var_name" || {
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞.${NC}"
        exit 1
    }
}

# –í—ã–±–∏—Ä–∞–µ–º docker compose v1/v2
if docker compose version >/dev/null 2>&1; then
    DC=("docker" "compose")
else
    DC=("docker-compose")
fi

echo -e "${GREEN}===============================================${NC}"
echo -e "${GREEN}      üöÄ Dark Maximus - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã     ${NC}"
echo -e "${GREEN}===============================================${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ root
if [ "$EUID" -ne 0 ]; then
    echo -e "${RED}‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root: sudo ./install.sh${NC}"
    exit 1
fi

# –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ—à–∏–±–æ–∫ "unbound variable"
MAIN_DOMAIN=""
PANEL_DOMAIN=""
DOCS_DOMAIN=""
HELP_DOMAIN=""

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —É—Å—Ç–∞–Ω–æ–≤–∫–∏
INSTALL_DIR="/opt/dark-maximus"
PROJECT_DIR="$INSTALL_DIR"

echo -e "\n${CYAN}–®–∞–≥ 0: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...${NC}"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —É—Å—Ç–∞–Ω–æ–≤–∫–∏
mkdir -p "$INSTALL_DIR"
cd "$INSTALL_DIR"

# –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
echo -e "${YELLOW}–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...${NC}"
if [ -d ".git" ]; then
    echo -e "${YELLOW}–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º...${NC}"
    git pull origin main
else
    git clone https://github.com/ukarshiev/dark-maximus.git .
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -f "pyproject.toml" ]; then
    echo -e "${RED}‚ùå –§–∞–π–ª pyproject.toml –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è.${NC}"
    exit 1
fi

echo -e "${GREEN}‚úî –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω –≤ $PROJECT_DIR${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è Docker
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤...${NC}"
REQUIRED_FILES=(
    "Dockerfile"
    "Dockerfile.docs" 
    "Dockerfile.codex-docs"
    "docs/nginx-docs.conf"
    "codex.docs/docs-config.yaml"
    "codex.docs/package.json"
    "codex.docs/yarn.lock"
)

for file in "${REQUIRED_FILES[@]}"; do
    if [ ! -f "$file" ]; then
        echo -e "${RED}‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ñ–∞–π–ª: $file${NC}"
        exit 1
    fi
done

echo -e "${GREEN}‚úî –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã${NC}"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –¥–ª—è APT
export DEBIAN_FRONTEND=noninteractive

echo -e "\n${CYAN}–®–∞–≥ 1: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
apt -yq update
apt -yq upgrade

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã
apt -yq install \
    curl \
    wget \
    git \
    nginx \
    ufw \
    openssl \
    dnsutils \
    software-properties-common \
    apt-transport-https \
    ca-certificates \
    gnupg \
    lsb-release \
    unzip \
    jq \
    bc \
    netcat-openbsd

echo -e "${GREEN}‚úî –°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"

echo -e "\n${CYAN}–®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ Docker Compose...${NC}"

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ Docker
apt -yq remove docker docker-engine docker.io containerd runc 2>/dev/null || true

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker
curl -fsSL https://get.docker.com -o get-docker.sh
sh get-docker.sh
rm get-docker.sh

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É docker
TARGET_USER="${SUDO_USER:-${USER:-root}}"
if [ "$TARGET_USER" != "root" ]; then
    id -nG "$TARGET_USER" | grep -qw docker || usermod -aG docker "$TARGET_USER" || true
    echo -e "${YELLOW}‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $TARGET_USER –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É docker.${NC}"
    echo -e "${YELLOW}   –í—ã–π–¥–∏—Ç–µ –∏ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–µ—Å—Å–∏—é –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π.${NC}"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
if ! command -v docker >/dev/null || ! docker compose version >/dev/null 2>&1; then
    DOCKER_COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r '.tag_name')
    curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    ln -sf /usr/local/bin/docker-compose /usr/bin/docker-compose
fi

echo -e "${GREEN}‚úî Docker –∏ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"

echo -e "\n${CYAN}–®–∞–≥ 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–º–µ–Ω–æ–≤...${NC}"

# –ü–æ–ª—É—á–∞–µ–º –¥–æ–º–µ–Ω –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–æ–º–µ–Ω–∞...${NC}"
echo -e "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤: $#"
echo -e "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è DOMAIN: ${DOMAIN:-–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞}"

if [ -n "${DOMAIN:-}" ]; then
    MAIN_DOMAIN="$DOMAIN"
    echo -e "${GREEN}‚úî –î–æ–º–µ–Ω –ø–æ–ª—É—á–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è: ${MAIN_DOMAIN}${NC}"
elif [ $# -gt 0 ] && [ -n "${1:-}" ]; then
    MAIN_DOMAIN="$1"
    echo -e "${GREEN}‚úî –î–æ–º–µ–Ω –ø–æ–ª—É—á–µ–Ω –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤: ${MAIN_DOMAIN}${NC}"
else
    echo -e "${YELLOW}–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤–≤–æ–¥...${NC}"
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω
    read_input "–í–≤–µ–¥–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä: example.com): " MAIN_DOMAIN
fi

if [ -z "$MAIN_DOMAIN" ]; then
    echo -e "${RED}‚ùå –î–æ–º–µ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!${NC}"
    exit 1
fi

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–¥–¥–æ–º–µ–Ω—ã
PANEL_DOMAIN="panel.${MAIN_DOMAIN}"
DOCS_DOMAIN="docs.${MAIN_DOMAIN}"
HELP_DOMAIN="help.${MAIN_DOMAIN}"

echo -e "${GREEN}‚úî –î–æ–º–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã:${NC}"
echo -e "   - –ü–∞–Ω–µ–ª—å: ${PANEL_DOMAIN}"
echo -e "   - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: ${DOCS_DOMAIN}"
echo -e "   - –ê–¥–º–∏–Ω-–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: ${HELP_DOMAIN}"

echo -e "\n${CYAN}–®–∞–≥ 4: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤...${NC}"

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–µ–∫—Ä–µ—Ç—ã
FLASK_SECRET_KEY=$(openssl rand -hex 32)
ADMIN_PASSWORD=$(openssl rand -base64 18)

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∞–±–ª–æ–Ω–∞
if [ -f "config/env.example" ]; then
    cp config/env.example .env
    echo -e "${YELLOW}–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —à–∞–±–ª–æ–Ω .env –∏–∑ config/env.example${NC}"
else
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª
    cat > .env << EOF
# Dark Maximus Environment Variables
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ

# Flask Secret Key
FLASK_SECRET_KEY=${FLASK_SECRET_KEY}

# Admin Password
ADMIN_PASSWORD=${ADMIN_PASSWORD}

# SSH Port
SSH_PORT=22

# Domains
MAIN_DOMAIN=${MAIN_DOMAIN}
PANEL_DOMAIN=${PANEL_DOMAIN}
DOCS_DOMAIN=${DOCS_DOMAIN}
HELP_DOMAIN=${HELP_DOMAIN}
EOF
fi

# –û–±–Ω–æ–≤–ª—è–µ–º .env —Å –Ω–∞—à–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
sed -i "s/FLASK_SECRET_KEY=.*/FLASK_SECRET_KEY=${FLASK_SECRET_KEY}/" .env
sed -i "s/ADMIN_PASSWORD=.*/ADMIN_PASSWORD=${ADMIN_PASSWORD}/" .env
sed -i "s/DOMAIN=.*/DOMAIN=${MAIN_DOMAIN}/" .env

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª
echo "$ADMIN_PASSWORD" > .admin_pass
chmod 600 .admin_pass

echo -e "${GREEN}‚úî –°–µ–∫—Ä–µ—Ç—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ .env${NC}"
echo -e "${YELLOW}‚ö†Ô∏è  –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ .admin_pass (—Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è root)${NC}"

echo -e "\n${CYAN}–®–∞–≥ 4.1: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...${NC}"

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p logs
mkdir -p backups
mkdir -p codex.docs/uploads
mkdir -p codex.docs/db
mkdir -p sessions

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
chmod 755 logs backups sessions
chmod 755 codex.docs/uploads codex.docs/db

echo -e "${GREEN}‚úî –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã${NC}"

echo -e "\n${CYAN}–®–∞–≥ 4.2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...${NC}"

# –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
if [ ! -f "users.db" ]; then
    touch users.db
    chmod 644 users.db
    echo -e "${YELLOW}–°–æ–∑–¥–∞–Ω–∞ –ø—É—Å—Ç–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö users.db${NC}"
fi

echo -e "${GREEN}‚úî –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞${NC}"

echo -e "\n${CYAN}–®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ docker-compose.yml...${NC}"

# –°–æ–∑–¥–∞–µ–º docker-compose.yml —Å localhost-only –ø–æ—Ä—Ç–∞–º–∏
cat > docker-compose.yml << EOF
version: '3.8'

services:
  bot:
    build: .
    container_name: dark-maximus-bot
    restart: unless-stopped
    ports:
      - '127.0.0.1:1488:1488'
    volumes:
      - ./users.db:/app/project/users.db
      - ./logs:/app/project/logs
      - ./backups:/app/project/backups
    environment:
      - FLASK_SECRET_KEY=\${FLASK_SECRET_KEY}
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 1488 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - dark-maximus-network

  docs:
    build:
      context: .
      dockerfile: Dockerfile.docs
    container_name: dark-maximus-docs
    restart: unless-stopped
    ports:
      - '127.0.0.1:3001:80'
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - dark-maximus-network

  codex-docs:
    build:
      context: .
      dockerfile: Dockerfile.codex-docs
    container_name: dark-maximus-codex-docs
    restart: unless-stopped
    ports:
      - '127.0.0.1:3002:3000'
    volumes:
      - ./codex.docs/uploads:/usr/src/app/uploads
      - ./codex.docs/db:/usr/src/app/db
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - dark-maximus-network

networks:
  dark-maximus-network:
    driver: bridge
    name: dark-maximus-network
EOF

echo -e "${GREEN}‚úî docker-compose.yml —Å–æ–∑–¥–∞–Ω —Å localhost-only –ø–æ—Ä—Ç–∞–º–∏${NC}"

echo -e "\n${CYAN}–®–∞–≥ 6: –°–æ–∑–¥–∞–Ω–∏–µ nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (HTTP)...${NC}"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
mkdir -p /etc/nginx/sites-available
mkdir -p /etc/nginx/sites-enabled

# –°–æ–∑–¥–∞–µ–º HTTP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
cat > /etc/nginx/sites-available/dark-maximus << EOF
# Upstream —Å–µ—Ä–≤–µ—Ä—ã –¥–ª—è Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (localhost)
upstream bot_backend {
    server 127.0.0.1:1488;
    keepalive 32;
}

upstream docs_backend {
    server 127.0.0.1:3001;
    keepalive 32;
}

upstream codex_docs_backend {
    server 127.0.0.1:3002;
    keepalive 32;
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä (–ø–∞–Ω–µ–ª—å)
server {
    listen 80;
    server_name ${PANEL_DOMAIN};
    
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    client_max_body_size 20m;
    
    # –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ bot —Å–µ—Ä–≤–∏—Å
    location / {
        proxy_pass http://bot_backend;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_set_header X-Forwarded-Host \$host;
        proxy_set_header X-Forwarded-Port \$server_port;
        
        # –¢–∞–π–º–∞—É—Ç—ã
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # –ë—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—è
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # Health check
    location /health {
        proxy_pass http://bot_backend/health;
        access_log off;
    }
}

# –°–µ—Ä–≤–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
server {
    listen 80;
    server_name ${DOCS_DOMAIN};
    
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    client_max_body_size 20m;
    
    # –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ docs —Å–µ—Ä–≤–∏—Å
    location / {
        proxy_pass http://docs_backend;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_set_header X-Forwarded-Host \$host;
        proxy_set_header X-Forwarded-Port \$server_port;
        
        # –¢–∞–π–º–∞—É—Ç—ã
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Health check
    location /health {
        proxy_pass http://docs_backend/health;
        access_log off;
    }
}

# –°–µ—Ä–≤–µ—Ä –∞–¥–º–∏–Ω—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
server {
    listen 80;
    server_name ${HELP_DOMAIN};
    
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    client_max_body_size 20m;
    
    # –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ codex-docs —Å–µ—Ä–≤–∏—Å
    location / {
        proxy_pass http://codex_docs_backend;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_set_header X-Forwarded-Host \$host;
        proxy_set_header X-Forwarded-Port \$server_port;
        
        # WebSocket –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 60m;
        proxy_buffering off;
        
        # –¢–∞–π–º–∞—É—Ç—ã
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
    }
    
    # Health check
    location /health {
        proxy_pass http://codex_docs_backend/;
        access_log off;
    }
}

# –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤
server {
    listen 80 default_server;
    server_name _;
    return 444;
}
EOF

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
ln -sf /etc/nginx/sites-available/dark-maximus /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx –±–µ–∑ upstream (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞)
cat > /etc/nginx/sites-available/dark-maximus-temp << EOF
# –í—Ä–µ–º–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è nginx (–±–µ–∑ upstream)
server {
    listen 80 default_server;
    server_name _;
    return 444;
}
EOF

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
ln -sf /etc/nginx/sites-available/dark-maximus-temp /etc/nginx/sites-enabled/dark-maximus
rm -f /etc/nginx/sites-enabled/default

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx
nginx -t || {
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –≤ –±–∞–∑–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx${NC}"
    nginx -t
    exit 1
}

echo -e "${GREEN}‚úî –í—Ä–µ–º–µ–Ω–Ω–∞—è nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞${NC}"

echo -e "\n${CYAN}–®–∞–≥ 7: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW (—Ñ–∞–π—Ä–≤–æ–ª)...${NC}"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º SSH –ø–æ—Ä—Ç
SSH_PORT="${SSH_PORT:-22}"

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º UFW –±–µ–∑–æ–ø–∞—Å–Ω–æ
ufw --force reset
ufw default deny incoming
ufw default allow outgoing

# –†–∞–∑—Ä–µ—à–∞–µ–º SSH (–≤–∞–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –ø–µ—Ä–≤—ã–º!)
ufw allow ${SSH_PORT}/tcp comment "SSH"

# –†–∞–∑—Ä–µ—à–∞–µ–º HTTP –∏ HTTPS
ufw allow 80/tcp comment "HTTP"
ufw allow 443/tcp comment "HTTPS"

# –ù–ï –æ—Ç–∫—Ä—ã–≤–∞–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—ã–µ –ø–æ—Ä—Ç—ã –Ω–∞—Ä—É–∂—É!
echo -e "${YELLOW}‚ö†Ô∏è  –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –ø–æ—Ä—Ç—ã 1488/3001/3002 –ù–ï –æ—Ç–∫—Ä—ã—Ç—ã –Ω–∞—Ä—É–∂—É (–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)${NC}"

# –í–∫–ª—é—á–∞–µ–º UFW
ufw --force enable

echo -e "${GREEN}‚úî UFW –Ω–∞—Å—Ç—Ä–æ–µ–Ω –±–µ–∑–æ–ø–∞—Å–Ω–æ${NC}"

echo -e "\n${CYAN}–®–∞–≥ 7.1: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ logrotate...${NC}"

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é logrotate –¥–ª—è –ª–æ–≥–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
cat > /etc/logrotate.d/dark-maximus << EOF
${PROJECT_DIR}/logs/*.log {
    daily
    missingok
    rotate 30
    compress
    delaycompress
    notifempty
    create 644 root root
    postrotate
        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º nginx –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        systemctl reload nginx > /dev/null 2>&1 || true
    endscript
}
EOF

echo -e "${GREEN}‚úî Logrotate –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"

echo -e "\n${CYAN}–®–∞–≥ 7.2: –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞...${NC}"

# –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
cat > /etc/systemd/system/dark-maximus.service << EOF
[Unit]
Description=Dark Maximus VPN Bot
Requires=docker.service
After=docker.service

[Service]
Type=oneshot
RemainAfterExit=yes
WorkingDirectory=${PROJECT_DIR}
ExecStart=/usr/bin/docker compose up -d
ExecStop=/usr/bin/docker compose down
TimeoutStartSec=0

[Install]
WantedBy=multi-user.target
EOF

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º systemd –∏ –≤–∫–ª—é—á–∞–µ–º —Å–µ—Ä–≤–∏—Å
systemctl daemon-reload
systemctl enable dark-maximus.service

echo -e "${GREEN}‚úî Systemd —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω –∏ –≤–∫–ª—é—á–µ–Ω${NC}"

echo -e "\n${CYAN}–®–∞–≥ 8: –ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"

# –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
${DC[@]} down --remove-orphans 2>/dev/null || true
${DC[@]} build --no-cache
${DC[@]} up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
echo -e "${YELLOW}–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"

# –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ bot —Å–µ—Ä–≤–∏—Å–∞
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ bot —Å–µ—Ä–≤–∏—Å–∞...${NC}"
timeout 120 bash -c 'until nc -z 127.0.0.1 1488; do sleep 2; done' || {
    echo -e "${RED}‚ùå Bot —Å–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –º–∏–Ω—É—Ç${NC}"
    ${DC[@]} logs bot
    exit 1
}

# –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ docs —Å–µ—Ä–≤–∏—Å–∞
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ docs —Å–µ—Ä–≤–∏—Å–∞...${NC}"
timeout 60 bash -c 'until nc -z 127.0.0.1 3001; do sleep 2; done' || {
    echo -e "${RED}‚ùå Docs —Å–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã${NC}"
    ${DC[@]} logs docs
    exit 1
}

# –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ codex-docs —Å–µ—Ä–≤–∏—Å–∞
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ codex-docs —Å–µ—Ä–≤–∏—Å–∞...${NC}"
timeout 60 bash -c 'until nc -z 127.0.0.1 3002; do sleep 2; done' || {
    echo -e "${RED}‚ùå Codex-docs —Å–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã${NC}"
    ${DC[@]} logs codex-docs
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "\n${CYAN}–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:${NC}"
${DC[@]} ps

echo -e "\n${CYAN}–®–∞–≥ 9: –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–ª–Ω–æ–π nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${NC}"

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx —Å upstream —Å–µ—Ä–≤–µ—Ä–∞–º–∏
echo -e "${YELLOW}–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx...${NC}"
ln -sf /etc/nginx/sites-available/dark-maximus /etc/nginx/sites-enabled/dark-maximus

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx —Ç–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx...${NC}"
nginx -t || {
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx${NC}"
    nginx -t
    exit 1
}

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º nginx
systemctl enable nginx
systemctl restart nginx

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å nginx
systemctl status nginx --no-pager -l

echo -e "\n${CYAN}–®–∞–≥ 10: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏...${NC}"

# –ñ–¥–µ–º –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
sleep 5

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º bot —Å–µ—Ä–≤–∏—Å
if nc -z 127.0.0.1 1488; then
    echo -e "${GREEN}‚úÖ Bot —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
else
    echo -e "${RED}‚ùå Bot —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º docs —Å–µ—Ä–≤–∏—Å
if nc -z 127.0.0.1 3001; then
    echo -e "${GREEN}‚úÖ Docs —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
else
    echo -e "${RED}‚ùå Docs —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º codex-docs —Å–µ—Ä–≤–∏—Å
if nc -z 127.0.0.1 3002; then
    echo -e "${GREEN}‚úÖ Codex-docs —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
else
    echo -e "${RED}‚ùå Codex-docs —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
fi

echo -e "\n${GREEN}===============================================${NC}"
echo -e "${GREEN}      üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! üéâ      ${NC}"
echo -e "${GREEN}===============================================${NC}"

echo -e "\n${BLUE}üìã –†–ï–ó–Æ–ú–ï –£–°–¢–ê–ù–û–í–ö–ò:${NC}"
echo -e "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
echo -e "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω Docker –∏ Docker Compose"
echo -e "‚úÖ –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∞–±–ª–æ–Ω–∞ config/env.example"
echo -e "‚úÖ –°–æ–∑–¥–∞–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (logs, backups, sessions)"
echo -e "‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö users.db"
echo -e "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã 3 –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: bot, docs, codex-docs"
echo -e "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω nginx —Å –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ–º –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
echo -e "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω UFW —Ñ–∞–π—Ä–≤–æ–ª (–ø–æ—Ä—Ç—ã 22, 80, 443)"
echo -e "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω logrotate –¥–ª—è —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤"
echo -e "‚úÖ –°–æ–∑–¥–∞–Ω systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞"
echo -e "‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã —Å–µ–∫—Ä–µ—Ç—ã –∏ –ø–∞—Ä–æ–ª–∏"
echo -e "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"

echo -e "\n${BLUE}üì± –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã (HTTP):${NC}"
echo -e "1. –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç –∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:"
echo -e "   - ${GREEN}http://${PANEL_DOMAIN}/login${NC}"
echo -e "   - –õ–æ–≥–∏–Ω: ${YELLOW}admin${NC}"
echo -e "   - –ü–∞—Ä–æ–ª—å: ${YELLOW}${ADMIN_PASSWORD}${NC}"

echo -e "\n2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
echo -e "   - ${GREEN}http://${DOCS_DOMAIN}${NC}"

echo -e "\n3. –ê–¥–º–∏–Ω—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è (Codex.docs):"
echo -e "   - ${GREEN}http://${HELP_DOMAIN}${NC}"

echo -e "\n4. –ü—Ä—è–º—ã–µ –ø–æ—Ä—Ç—ã (—Ç–æ–ª—å–∫–æ localhost):"
echo -e "   - –ë–æ—Ç: ${GREEN}http://localhost:1488${NC}"
echo -e "   - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: ${GREEN}http://localhost:3001${NC}"
echo -e "   - –ê–¥–º–∏–Ω-–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: ${GREEN}http://localhost:3002${NC}"

echo -e "\n${BLUE}üîß –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
echo -e "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ DNS A-–∑–∞–ø–∏—Å–∏ –¥–ª—è –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤ –Ω–∞ IP —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"
echo -e "2. –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSL –∑–∞–ø—É—Å—Ç–∏—Ç–µ: ${YELLOW}curl -sSL https://raw.githubusercontent.com/ukarshiev/dark-maximus/main/ssl-install.sh | sudo bash -s -- $MAIN_DOMAIN${NC}"
echo -e "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: ${YELLOW}cd $PROJECT_DIR && ${DC[@]} ps${NC}"
echo -e "4. –ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏: ${YELLOW}cd $PROJECT_DIR && ${DC[@]} logs -f${NC}"

echo -e "\n${BLUE}üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo -e "- –ü–µ—Ä–µ–π—Ç–∏ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞: ${YELLOW}cd $PROJECT_DIR${NC}"
echo -e "- –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã: ${YELLOW}cd $PROJECT_DIR && ${DC[@]} down${NC}"
echo -e "- –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã: ${YELLOW}cd $PROJECT_DIR && ${DC[@]} up -d${NC}"
echo -e "- –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å nginx: ${YELLOW}systemctl restart nginx${NC}"
echo -e "- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å nginx: ${YELLOW}nginx -t${NC}"
echo -e "- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–æ–º:"
echo -e "  - –°—Ç–∞—Ç—É—Å: ${YELLOW}systemctl status dark-maximus${NC}"
echo -e "  - –ó–∞–ø—É—Å–∫: ${YELLOW}systemctl start dark-maximus${NC}"
echo -e "  - –û—Å—Ç–∞–Ω–æ–≤–∫–∞: ${YELLOW}systemctl stop dark-maximus${NC}"
echo -e "  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: ${YELLOW}systemctl restart dark-maximus${NC}"

echo -e "\n${BLUE}üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:${NC}"
echo -e "- –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: ${YELLOW}$PROJECT_DIR/.admin_pass${NC}"
echo -e "- –°–µ–∫—Ä–µ—Ç—ã –≤: ${YELLOW}$PROJECT_DIR/.env${NC}"
echo -e "- –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –ø–æ—Ä—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ —Å localhost"
echo -e "- UFW –Ω–∞—Å—Ç—Ä–æ–µ–Ω –±–µ–∑–æ–ø–∞—Å–Ω–æ (—Ç–æ–ª—å–∫–æ 22, 80, 443)"

echo -e "\n${GREEN}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.${NC}"